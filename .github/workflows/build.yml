name: CMake Build and Package (macOS Fix)

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    name: Build
    runs-on: macos-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup macOS environment
      run: |
        brew update
        brew install cmake ninja create-dmg
        brew install python@3.11
        python3.11 -m pip install --upgrade pip

    - name: Install aqtinstall (pinned version)
      run: |
        python3.11 -m pip install aqtinstall==3.1.21 py7zr

    - name: List available Qt versions (Debug)
      run: |
        python3.11 -m aqt list-qt mac desktop

    - name: Install Qt (macOS Apple Silicon)
      run: |
        # 使用clang_64而不是clang_arm64（这是关键修复）
        python3.11 -m aqt install-qt mac desktop 6.6.3 clang_64 \
          --outputdir "$HOME/Qt" \
          --modules qtbase qttools
        
        # 验证安装
        QT_ROOT="$HOME/Qt/6.6.3/clang_64"
        if [ ! -f "$QT_ROOT/bin/qmake" ]; then
          echo "::error::Qt installation failed!"
          echo "Directory contents:"
          ls -la "$QT_ROOT" || true
          exit 1
        fi
        echo "QT_PATH=$QT_ROOT" >> $GITHUB_ENV

    - name: Configure CMake
      run: |
        cmake -B build \
          -G Ninja \
          -DCMAKE_BUILD_TYPE=Release \
          -DCMAKE_PREFIX_PATH="$QT_PATH"

    - name: Build project
      run: |
        cmake --build build --config Release --parallel $(sysctl -n hw.ncpu)

    - name: Create macOS app bundle
      run: |
        mkdir -p package/MyProject.app/Contents/{MacOS,Resources}
        cp build/MyProject package/MyProject.app/Contents/MacOS/
        
        # 创建Info.plist
        cat > package/MyProject.app/Contents/Info.plist <<EOF
        <?xml version="1.0" encoding="UTF-8"?>
        <plist version="1.0">
        <dict>
            <key>CFBundleExecutable</key>
            <string>MyProject</string>
            <key>CFBundleIdentifier</key>
            <string>com.yourcompany.MyProject</string>
            <key>CFBundleVersion</key>
            <string>1.0</string>
            <key>NSHighResolutionCapable</key>
            <true/>
        </dict>
        </plist>
        EOF
        
        # 使用macdeployqt处理依赖
        "$QT_PATH/bin/macdeployqt" package/MyProject.app \
          -always-overwrite \
          -verbose=3

    - name: Create DMG image
      run: |
        create-dmg \
          --volname "MyProject" \
          --window-size 800 400 \
          --icon "MyProject.app" 200 190 \
          --app-drop-link 600 185 \
          MyProject-macOS.dmg \
          package/

    - name: Upload artifact
      uses: actions/upload-artifact@v4
      with:
        name: MyProject-macOS
        path: MyProject-macOS.dmg
