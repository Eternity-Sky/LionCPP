cmake_minimum_required(VERSION 3.14)
project(LionCPP VERSION 0.1 LANGUAGES CXX)
set(CMAKE_C_COMPILER "/usr/bin/gcc")
set(CMAKE_CXX_COMPILER "/usr/bin/g++")
set(CMAKE_AUTOUIC ON)
set(CMAKE_AUTOMOC ON)
set(CMAKE_AUTORCC ON)

set(CMAKE_CXX_STANDARD 17)
set(CMAKE_CXX_STANDARD_REQUIRED ON)
set(CMAKE_CXX_EXTENSIONS OFF)

set(CMAKE_INCLUDE_CURRENT_DIR ON)

find_package(QT NAMES Qt6 Qt5 REQUIRED COMPONENTS Widgets Core Gui)
find_package(Qt${QT_VERSION_MAJOR} REQUIRED COMPONENTS Widgets Core Gui)

set(PROJECT_SOURCES
    main.cpp
    lioncpp.cpp
    lioncpp.h
    lioncpp.ui
    lioncpp.qrc
    codeeditor.cpp
    codeeditor.h
    projectmanager.cpp
    projectmanager.h
    compiler.cpp
    compiler.h
    settingsdialog.cpp
    settingsdialog.h
    settingsdialog.ui
    findreplacedialog.cpp
    findreplacedialog.h
    welcomedialog.cpp
    welcomedialog.h
    codeeditor_findreplace.cpp
    line_number_area.cpp
    line_number_area.h
)

if(${QT_VERSION_MAJOR} GREATER_EQUAL 6)
    qt_add_executable(LionCPP
        MANUAL_FINALIZATION
        ${PROJECT_SOURCES}
    )
else()
    add_executable(LionCPP
        ${PROJECT_SOURCES}
    )
endif()

target_link_libraries(LionCPP PRIVATE 
    Qt${QT_VERSION_MAJOR}::Widgets 
    Qt${QT_VERSION_MAJOR}::Core 
    Qt${QT_VERSION_MAJOR}::Gui
)

if(${QT_VERSION} VERSION_LESS 6.1.0)
  set(BUNDLE_ID_OPTION MACOSX_BUNDLE_GUI_IDENTIFIER com.example.LionCPP)
endif()
set_target_properties(LionCPP PROPERTIES
    ${BUNDLE_ID_OPTION}
    MACOSX_BUNDLE_BUNDLE_VERSION ${PROJECT_VERSION}
    MACOSX_BUNDLE_SHORT_VERSION_STRING ${PROJECT_VERSION_MAJOR}.${PROJECT_VERSION_MINOR}
    MACOSX_BUNDLE TRUE
    WIN32_EXECUTABLE TRUE
)

if(QT_VERSION_MAJOR EQUAL 6)
    qt_finalize_executable(LionCPP)
endif()
